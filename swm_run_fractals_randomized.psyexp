<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2024.2.4">
  <Settings>
    <Param val="4" valType="str" updates="None" name="Audio latency priority"/>
    <Param val="ptb" valType="str" updates="None" name="Audio lib"/>
    <Param val="" valType="str" updates="None" name="Completed URL"/>
    <Param val="auto" valType="str" updates="None" name="Data file delimiter"/>
    <Param val="u'data/sub-%s/sub-%s_ses-%s_task-%s_run-%s_%s' % (expInfo['participant'],expInfo['participant'],expInfo['session'], expName, expInfo['run'],expInfo['date'])" valType="code" updates="None" name="Data filename"/>
    <Param val="True" valType="bool" updates="None" name="Enable Escape"/>
    <Param val="Thank you for your patience." valType="str" updates="None" name="End Message"/>
    <Param val="{'participant': '', 'session': '', 'run': '', 'DoPractice': 'False', 'eeg': 'False', 'eyetrack': 'False'}" valType="code" updates="None" name="Experiment info"/>
    <Param val="True" valType="bool" updates="None" name="Force stereo"/>
    <Param val="True" valType="bool" updates="None" name="Full-screen window"/>
    <Param val="" valType="str" updates="None" name="HTML path"/>
    <Param val="" valType="str" updates="None" name="Incomplete URL"/>
    <Param val="asus_TR" valType="str" updates="None" name="Monitor"/>
    <Param val="['stimuli/fractals_abstracts_stimuli_101/lure_and_images.json']" valType="fileList" updates="None" name="Resources"/>
    <Param val="False" valType="bool" updates="None" name="Save csv file"/>
    <Param val="False" valType="bool" updates="None" name="Save excel file"/>
    <Param val="False" valType="bool" updates="None" name="Save hdf5 file"/>
    <Param val="True" valType="bool" updates="None" name="Save log file"/>
    <Param val="True" valType="bool" updates="None" name="Save psydat file"/>
    <Param val="True" valType="bool" updates="None" name="Save wide csv file"/>
    <Param val="1" valType="num" updates="None" name="Screen"/>
    <Param val="True" valType="bool" updates="None" name="Show info dlg"/>
    <Param val="False" valType="bool" updates="None" name="Show mouse"/>
    <Param val="height" valType="str" updates="None" name="Units"/>
    <Param val="" valType="str" updates="None" name="Use version"/>
    <Param val="[1920, 1080]" valType="code" updates="None" name="Window size (pixels)"/>
    <Param val="none" valType="str" updates="None" name="backgroundFit"/>
    <Param val="" valType="str" updates="None" name="backgroundImg"/>
    <Param val="avg" valType="str" updates="None" name="blendMode"/>
    <Param val="float" valType="str" updates="None" name="clockFormat"/>
    <Param val="{'thisRow.t': 'priority.CRITICAL', 'expName': 'priority.LOW'}" valType="dict" updates="None" name="colPriority"/>
    <Param val="black" valType="str" updates="None" name="color"/>
    <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
    <Param val="warning" valType="code" updates="None" name="consoleLoggingLevel"/>
    <Param val="default" valType="str" updates="None" name="ecSampleRate"/>
    <Param val="100.1.1.1" valType="str" updates="None" name="elAddress"/>
    <Param val="FILTER_LEVEL_2" valType="str" updates="None" name="elDataFiltering"/>
    <Param val="FILTER_LEVEL_OFF" valType="str" updates="None" name="elLiveFiltering"/>
    <Param val="EYELINK 1000 DESKTOP" valType="str" updates="None" name="elModel"/>
    <Param val="ELLIPSE_FIT" valType="str" updates="None" name="elPupilAlgorithm"/>
    <Param val="PUPIL_AREA" valType="str" updates="None" name="elPupilMeasure"/>
    <Param val="1000" valType="num" updates="None" name="elSampleRate"/>
    <Param val="False" valType="bool" updates="None" name="elSimMode"/>
    <Param val="RIGHT_EYE" valType="str" updates="None" name="elTrackEyes"/>
    <Param val="PUPIL_CR_TRACKING" valType="str" updates="None" name="elTrackingMode"/>
    <Param val="swm_run_fractals" valType="str" updates="None" name="expName"/>
    <Param val="on Sync" valType="str" updates="None" name="exportHTML"/>
    <Param val="None" valType="str" updates="None" name="eyetracker"/>
    <Param val="" valType="code" updates="None" name="frameRate"/>
    <Param val="Attempting to measure frame rate of screen, please wait..." valType="str" updates="None" name="frameRateMsg"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="gpAddress"/>
    <Param val="4242" valType="num" updates="None" name="gpPort"/>
    <Param val="ioHub" valType="str" updates="None" name="keyboardBackend"/>
    <Param val="debug" valType="code" updates="None" name="logging level"/>
    <Param val="True" valType="bool" updates="None" name="measureFrameRate"/>
    <Param val="('MIDDLE_BUTTON',)" valType="list" updates="None" name="mgBlink"/>
    <Param val="CONTINUOUS" valType="str" updates="None" name="mgMove"/>
    <Param val="0.5" valType="num" updates="None" name="mgSaccade"/>
    <Param val="neon.local" valType="str" updates="None" name="plCompanionAddress"/>
    <Param val="8080" valType="num" updates="None" name="plCompanionPort"/>
    <Param val="True" valType="bool" updates="None" name="plCompanionRecordingEnabled"/>
    <Param val="0.6" valType="num" updates="None" name="plConfidenceThreshold"/>
    <Param val="True" valType="bool" updates="None" name="plPupilCaptureRecordingEnabled"/>
    <Param val="" valType="str" updates="None" name="plPupilCaptureRecordingLocation"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="plPupilRemoteAddress"/>
    <Param val="50020" valType="num" updates="None" name="plPupilRemotePort"/>
    <Param val="1000" valType="num" updates="None" name="plPupilRemoteTimeoutMs"/>
    <Param val="False" valType="bool" updates="None" name="plPupillometryOnly"/>
    <Param val="psychopy_iohub_surface" valType="str" updates="None" name="plSurfaceName"/>
    <Param val="1" valType="code" updates="None" name="runMode"/>
    <Param val="False" valType="bool" updates="None" name="rush"/>
    <Param val="time" valType="str" updates="None" name="sortColumns"/>
    <Param val="" valType="str" updates="None" name="tbLicenseFile"/>
    <Param val="" valType="str" updates="None" name="tbModel"/>
    <Param val="60" valType="num" updates="None" name="tbSampleRate"/>
    <Param val="" valType="str" updates="None" name="tbSerialNo"/>
    <Param val="pyglet" valType="str" updates="None" name="winBackend"/>
  </Settings>
  <Routines>
    <Routine name="Probe">
      <RoutineSettingsComponent name="Probe" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Probe" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_probe" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="prbL = &quot;white&quot;;&amp;#10;prbR = &quot;white&quot;;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="EEGtriggerSent = False&amp;#10;EYEtriggerSent = False&amp;#10;&amp;#10;prbL=&quot;white&quot;&amp;#10;prbR=&quot;white&quot;&amp;#10;&amp;#10;rspprobe=0" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="if expInfo['eeg'] and image_probe.status == STARTED and not EEGtriggerSent:&amp;#10;    win.callOnFlip(ns.send_event,event_type=&quot;PRB+&quot;,label=PRB,duration=float(probe_dur)) #Send the trigger, synced to the screen refresh&amp;#10;    EEGtriggerSent = True&amp;#10;if expInfo['eyetrack'] and image_probe.status == STARTED and not EYEtriggerSent:&amp;#10;    win.callOnFlip(tracker.log_message,PRB)&amp;#10;    EYEtriggerSent = True&amp;#10;&amp;#10;# Look for Key Response&amp;#10;if key_resp:&amp;#10;    if key_resp.keys=='1':&amp;#10;        prbL=&quot;blue&quot;&amp;#10;        if expInfo['eeg'] and rspprobe==0:&amp;#10;            ns.send_event(event_type=&quot;RESP&quot;,label=&quot;RSPL&quot;)&amp;#10;            rspprobe=1&amp;#10;    elif key_resp.keys=='2':&amp;#10;        prbR=&quot;blue&quot;&amp;#10;        if expInfo['eeg'] and rspprobe==0:&amp;#10;            ns.send_event(event_type=&quot;RESP&quot;,label=&quot;RSPR&quot;)&amp;#10;            rspprobe=1" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if (key_resp) {&amp;#10;    if ((key_resp.keys === &quot;1&quot;) || (key_resp.keys === &quot;left&quot;)) {&amp;#10;        prbL = &quot;blue&quot;;&amp;#10;    } else {&amp;#10;        if ((key_resp.keys === &quot;2&quot;) || (key_resp.keys === &quot;right&quot;)) {&amp;#10;            prbR = &quot;blue&quot;;&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="s_key = key_resp.keys;&amp;#10;if ((s_key === &quot;s&quot;)) {&amp;#10;    trials.finished = true;&amp;#10;}&amp;#10;&amp;#10;&amp;#10;thisExp=psychoJS.experiment;&amp;#10;&amp;#10;if ((correct_resp === 1) || (correct_resp === &quot;1&quot;)) {&amp;#10;    correctKey = [&quot;1&quot;,&quot;left&quot;];&amp;#10;}&amp;#10;if ((correct_resp === 2) || (correct_resp === &quot;2&quot;)) {&amp;#10;    correctKey = [&quot;2&quot;,&quot;right&quot;];&amp;#10;}&amp;#10;&amp;#10;if ((key_resp.keys === correctKey[0]) || (key_resp.keys === correctKey[1])) {&amp;#10;    key_resp.corr = true;&amp;#10;} else {&amp;#10;    key_resp.corr = false;&amp;#10;}&amp;#10;&amp;#10;thisExp.addData(&quot;correctKey&quot;, correctKey);&amp;#10;thisExp.addData(&quot;key_resp_corr&quot;, key_resp.corr)" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if expInfo['eeg'] and rspprobe==0:&amp;#10;    ns.send_event(event_type=&quot;RESP&quot;,label=&quot;MISS&quot;)&amp;#10;    rspprobe=1" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_probe" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="image_probe" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="3" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$probe_list" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="image_probe" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.05)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$probe_dur" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <KeyboardComponent name="key_resp" plugin="None">
        <Param val="'1','left','2','right','s'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="$correct_resp" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="3" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$probe_dur" valType="code" updates="constant" name="stopVal"/>
        <Param val="first key" valType="str" updates="constant" name="store"/>
        <Param val="True" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="text_LEFT" plugin="None">
        <Param val="$prbL" valType="str" updates="set every frame" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="3" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="RTL" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.08" valType="code" updates="constant" name="letterHeight"/>
        <Param val="text_LEFT" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(-0.20,-0.5)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$probe_dur" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="&lt;--&amp;#10;Same" valType="extendedStr" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="text_RIGHT" plugin="None">
        <Param val="$prbR" valType="str" updates="set every frame" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="3" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.08" valType="code" updates="constant" name="letterHeight"/>
        <Param val="text_RIGHT" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0.20,-0.5)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$probe_dur" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="--&gt;&amp;#10;Different" valType="extendedStr" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="Encoding">
      <RoutineSettingsComponent name="Encoding" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Encoding" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_encode" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="EEGtriggerSent = False&amp;#10;EYEtriggerSent = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="if expInfo['eeg'] and image_target.status == STARTED and not EEGtriggerSent:&amp;#10;    win.callOnFlip(ns.send_event,event_type=&quot;STIM&quot;,label=TRG,duration=float(target_dur)) #Send the trigger, synced to the screen refresh&amp;#10;    EEGtriggerSent = True&amp;#10;if expInfo['eyetrack'] and image_target.status == STARTED and not EYEtriggerSent:&amp;#10;    win.callOnFlip(tracker.log_message,TRG)&amp;#10;    EYEtriggerSent = True" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="#if expInfo['eeg']:&amp;#10;#    ns.send_event(event_type=TRG, start=image_target.started)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_encode" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="image_target" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="2" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$target_list" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="image_target" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.05)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$target_dur" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
    </Routine>
    <Routine name="Maintenance">
      <RoutineSettingsComponent name="Maintenance" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Maintenance" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_maint" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="EEGtriggerSent = False&amp;#10;EYEtriggerSent = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="if expInfo['eeg'] and image_maint.status == STARTED and not EEGtriggerSent:&amp;#10;    win.callOnFlip(ns.send_event,event_type=&quot;MNT+&quot;,label=MNT,duration=float(3.0)) #Send the trigger, synced to the screen refresh&amp;#10;    EEGtriggerSent = True&amp;#10;if expInfo['eyetrack'] and image_maint.status == STARTED and not EYEtriggerSent:&amp;#10;    win.callOnFlip(tracker.log_message,MNT)&amp;#10;    EYEtriggerSent = True" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_maint" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="image_maint" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="stimuli/SDRT/fix.BMP" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="image_maint" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.05)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="3" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
    </Routine>
    <Routine name="ISI">
      <RoutineSettingsComponent name="ISI" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="ISI" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_isi" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="EEGtriggerSent = False&amp;#10;EYEtriggerSent = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="if expInfo['eeg'] and image_ISI.status == STARTED and not EEGtriggerSent:&amp;#10;    win.callOnFlip(ns.send_event,event_type=&quot;ISI+&quot;,label=&quot;ISI+&quot;,duration=float(2.0)) #Send the trigger, synced to the screen refresh&amp;#10;    EEGtriggerSent = True&amp;#10;&amp;#10;if expInfo['eyetrack'] and image_ISI.status == STARTED and not EYEtriggerSent:&amp;#10;    win.callOnFlip(tracker.log_message,&quot;ISI&quot;)&amp;#10;    EYEtriggerSent = True" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="#if expInfo['eeg']:&amp;#10;#    ns.send_event(event_type=&quot;ISI&quot;, start=image_ISI.started)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_isi" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="image_ISI" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="stimuli/SDRT/BLANK.BMP" valType="str" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="image_ISI" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.05)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
    </Routine>
    <Routine name="getReady">
      <RoutineSettingsComponent name="getReady" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="getReady" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="expInfo['DoPractice'] == False" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="text_5" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.08" valType="code" updates="constant" name="letterHeight"/>
        <Param val="text_5" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.05)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="5" valType="extendedStr" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="text_4" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.08" valType="code" updates="constant" name="letterHeight"/>
        <Param val="text_4" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.05)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="4" valType="extendedStr" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="text_3" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.08" valType="code" updates="constant" name="letterHeight"/>
        <Param val="text_3" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.05)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="2" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="3" valType="extendedStr" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="text_2" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.08" valType="code" updates="constant" name="letterHeight"/>
        <Param val="text_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.05)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="3" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="2" valType="extendedStr" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="text_1" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.08" valType="code" updates="constant" name="letterHeight"/>
        <Param val="text_1" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.05)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="4" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="1" valType="extendedStr" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="Fixation">
      <RoutineSettingsComponent name="Fixation" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Fixation" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_fixation" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="EEGtriggerSent = False&amp;#10;EYEtriggerSent = False&amp;#10;&amp;#10;if load==1:&amp;#10;    TRG=&quot;TRG1&quot;&amp;#10;    PRB=&quot;PRB1&quot;&amp;#10;    MNT=&quot;MNT1&quot;&amp;#10;elif load==3:&amp;#10;    TRG=&quot;TRG3&quot;&amp;#10;    PRB=&quot;PRB3&quot;&amp;#10;    MNT=&quot;MNT3&quot;&amp;#10;elif load==4:&amp;#10;    TRG=&quot;TRG4&quot;&amp;#10;    PRB=&quot;PRB4&quot;&amp;#10;    MNT=&quot;MNT4&quot;&amp;#10;elif load==5:&amp;#10;    TRG=&quot;TRG5&quot;&amp;#10;    PRB=&quot;PRB5&quot;&amp;#10;    MNT=&quot;MNT5&quot;   &amp;#10;elif load==7:&amp;#10;    TRG=&quot;TRG7&quot;&amp;#10;    PRB=&quot;PRB7&quot;&amp;#10;    MNT=&quot;MNT7&quot;&amp;#10;else:&amp;#10;    TRG=&quot;TRG0&quot;&amp;#10;    PRB=&quot;PRB0&quot;&amp;#10;    MNT=&quot;MNT0&quot;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="if expInfo['eeg'] and image_fixation.status == STARTED and not EEGtriggerSent:&amp;#10;    win.callOnFlip(ns.send_event, event_type=&quot;FIXN&quot;,label=&quot;FIXN&quot;,duration=float(0.5)) #Send the trigger, synced to the screen refresh&amp;#10;    EEGtriggerSent = True&amp;#10;    &amp;#10;if expInfo['eyetrack'] and image_fixation.status == STARTED and not EYEtriggerSent:&amp;#10;    win.callOnFlip(tracker.log_message,&quot;FIXN&quot;) # fixation marker&amp;#10;    EYEtriggerSent = True" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_fixation" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="image_fixation" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="stimuli/SDRT/fix.BMP" valType="str" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="image_fixation" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.05)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
    </Routine>
    <Routine name="Feedback">
      <RoutineSettingsComponent name="Feedback" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Feedback" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_Feedback" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="resp = psychoJS.experiment._trialsData;&amp;#10;// Get count of correct trials&amp;#10;acc = 0;&amp;#10;//acc = resp.reduce((a, b) =&gt; a + b['key_resp.corr'], 0);&amp;#10;// Get Trial Length&amp;#10;//num = resp.length;&amp;#10;num=trials.thisN;&amp;#10;&amp;#10;// Mean RTs:&amp;#10;sumRt = 0;&amp;#10;for (let eachResp=0; eachResp&lt;psychoJS.experiment._trialsData.length; eachResp++) &amp;#10;{&amp;#10;  if ('key_resp.rt' in psychoJS.experiment._trialsData[eachResp]) {&amp;#10;    sumRt += psychoJS.experiment._trialsData[eachResp]['key_resp.rt'];&amp;#10;    acc += psychoJS.experiment._trialsData[eachResp]['key_resp.corr'];&amp;#10;  }&amp;#10;}&amp;#10;meanRt=(sumRt/num);&amp;#10;//console.log(sumRt)&amp;#10;pacc=( acc / num ) * 100;&amp;#10;//console.log(pacc)&amp;#10;&amp;#10;//message for display&amp;#10;msg = &quot;Great Job !!!!!!\n\nYou got &quot;+String(parseFloat(pacc).toFixed(2))+&quot;% correct. \nYour response time is &quot;+String(parseFloat(meanRt).toFixed(2))+&quot; sec.&quot;;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# get reaction time and accuracy&amp;#10;meanRt = trials.data['key_resp.rt'].mean()&amp;#10;acc = trials.data['key_resp.corr'].sum()&amp;#10;# calculate percent accuracy&amp;#10;num = trials.nTotal&amp;#10;pacc=(acc/num)*100&amp;#10;# message for display&amp;#10;msg = &quot;Great Job !!!!!!\n\nYou got %0.2f %% correct. \nYour response time is %.2f sec.&quot; %(pacc,meanRt) &amp;#10;&amp;#10;core.wait(5) # sleep 5 seconds&amp;#10;&amp;#10;if expInfo['eyetrack']:&amp;#10;    # stop recording&amp;#10;    tracker.log_message(&quot;STOP&quot;)&amp;#10;    tracker.stop_recording()&amp;#10;    # close connection to the tracker&amp;#10;    tracker.close()&amp;#10;&amp;#10;if expInfo['eeg']:&amp;#10;    ns.send_event(event_type=&quot;STOP&quot;)&amp;#10;    ns.end_rec()&amp;#10;    ns.disconnect()&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_Feedback" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="text_feedback" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.06" valType="code" updates="constant" name="letterHeight"/>
        <Param val="text_feedback" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.05)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="10.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$msg" valType="extendedStr" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="1.8" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="EncodeFeatures">
      <RoutineSettingsComponent name="EncodeFeatures" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="EncodeFeatures" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_encodeFeatures" plugin="None">
        <Param val="#import os&amp;#10;#import json&amp;#10;#import random&amp;#10;#&amp;#10;#stimuli_dir = 'stimuli/fractals_abstracts_stimuli_101'&amp;#10;#json_path = os.path.join(stimuli_dir, 'lure_and_images.json')&amp;#10;#&amp;#10;#with open(json_path, 'r') as f:&amp;#10;#    json_data = json.load(f)&amp;#10;#&amp;#10;#image_pool = json_data['image_pool']&amp;#10;#lure_dict = json_data['lure_dict']&amp;#10;#&amp;#10;&amp;#10;import os&amp;#10;import json&amp;#10;import random&amp;#10;&amp;#10;# Set stimuli folder and load lure_dict + image_pool once&amp;#10;stimuli_dir = 'stimuli/fractals_abstracts_stimuli_101'&amp;#10;json_path = os.path.join(stimuli_dir, 'lure_and_images.json')&amp;#10;&amp;#10;with open(json_path, 'r') as f:&amp;#10;    json_data = json.load(f)&amp;#10;&amp;#10;image_pool = json_data['image_pool']&amp;#10;#lure_dict = json_data['lure_dict']&amp;#10;&amp;#10;# Helper: extract filename from full path&amp;#10;def get_filename(path):&amp;#10;    return path.split('/')[-1]&amp;#10;&amp;#10;# Helper: safely prefix filenames&amp;#10;def build_full_path(filename):&amp;#10;    if filename.startswith('stimuli/fractals_abstracts_stimuli_101/'):&amp;#10;        return filename&amp;#10;    return os.path.join('stimuli', 'fractals_abstracts_stimuli_101', filename).replace('\\', '/')&amp;#10;" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="// Global vars&amp;#10;let image_pool = [];&amp;#10;let real_fractals = [];&amp;#10;let prev_images = [];&amp;#10;&amp;#10;// Helpers&amp;#10;function build_full_path(filename) {&amp;#10;    if (filename.startsWith('stimuli/fractals_abstracts_stimuli_101/')) {&amp;#10;        return filename;&amp;#10;    }&amp;#10;    return 'stimuli/fractals_abstracts_stimuli_101/' + filename;&amp;#10;}&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="// Declare global variables so they exist and don't cause &quot;not defined&quot; errors&amp;#10;var target_1 = &quot;&quot;;&amp;#10;var target_2 = &quot;&quot;;&amp;#10;var target_3 = &quot;&quot;;&amp;#10;var target_4 = &quot;&quot;;&amp;#10;var probe_list = &quot;&quot;;&amp;#10;var targetpos = 0;&amp;#10;var prev_images = [];&amp;#10;var real_fractals = [];&amp;#10;var image_pool = [];&amp;#10;var load = 1;          // or 4, set dynamically as needed&amp;#10;var target_ntarget = 1; // or another value, set dynamically as needed&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="// Helper to safely build full path&amp;#10;function build_full_path(filename) {&amp;#10;  if (typeof filename !== 'string') return '';&amp;#10;  if (filename.startsWith('stimuli/fractals_abstracts_stimuli_101/')) {&amp;#10;    return filename;&amp;#10;  }&amp;#10;  return 'stimuli/fractals_abstracts_stimuli_101/' + filename;&amp;#10;}&amp;#10;&amp;#10;// Load JSON once per experiment&amp;#10;if (image_pool.length === 0) {&amp;#10;    try {&amp;#10;        let jsonStr = psychoJS.serverManager.getResource('stimuli/fractals_abstracts_stimuli_101/lure_and_images.json');&amp;#10;        let jsonData = JSON.parse(jsonStr);&amp;#10;        image_pool = jsonData['image_pool'];&amp;#10;        real_fractals = image_pool.filter(img =&gt; img !== '0.png');&amp;#10;        console.log(&quot;JSON loaded successfully&quot;);&amp;#10;    } catch (error) {&amp;#10;        console.error(&quot;Failed to load JSON:&quot;, error);&amp;#10;        image_pool = [];&amp;#10;        real_fractals = [];&amp;#10;    }&amp;#10;}&amp;#10;&amp;#10;// Helper to safely build full path&amp;#10;function build_full_path(filename) {&amp;#10;    if (typeof filename !== 'string') return '';&amp;#10;    if (filename.startsWith('stimuli/fractals_abstracts_stimuli_101/')) {&amp;#10;        return filename;&amp;#10;    }&amp;#10;    return 'stimuli/fractals_abstracts_stimuli_101/' + filename;&amp;#10;}&amp;#10;&amp;#10;// Get previous trial's used images to avoid repeats&amp;#10;if (features.thisN &gt; 0) {&amp;#10;    try {&amp;#10;        let prevTrial = features.getEarlierTrial(features.thisN - 1);&amp;#10;        prev_images = prevTrial['used_images'] || [];&amp;#10;    } catch (e) {&amp;#10;        prev_images = [];&amp;#10;    }&amp;#10;} else {&amp;#10;    prev_images = [];&amp;#10;}&amp;#10;&amp;#10;// Select targets and probe&amp;#10;let attempts = 0;&amp;#10;let targets = [];&amp;#10;probe_list = &quot;&quot;;&amp;#10;&amp;#10;while (true) {&amp;#10;    attempts++;&amp;#10;    if (attempts &gt; 1000) {&amp;#10;        console.error(&quot;Too many attempts to find valid images, breaking.&quot;);&amp;#10;        break;&amp;#10;    }&amp;#10;&amp;#10;    if (load === 1) {&amp;#10;        // Load 1: 3 fillers + 1 fractal target&amp;#10;        let fractal_target = real_fractals[Math.floor(Math.random() * real_fractals.length)];&amp;#10;        targets = [&amp;#10;            build_full_path('0.png'),&amp;#10;            build_full_path('0.png'),&amp;#10;            build_full_path('0.png'),&amp;#10;            build_full_path(fractal_target)&amp;#10;        ];&amp;#10;    } else if (load === 4) {&amp;#10;        // Load 4: 4 fractals&amp;#10;        let shuffled = real_fractals.slice().sort(() =&gt; 0.5 - Math.random());&amp;#10;        targets = shuffled.slice(0, 4).map(build_full_path);&amp;#10;    } else {&amp;#10;        console.error(&quot;Unexpected load value:&quot;, load);&amp;#10;        break;&amp;#10;    }&amp;#10;&amp;#10;    // Shuffle targets&amp;#10;    targets = targets.sort(() =&gt; 0.5 - Math.random());&amp;#10;&amp;#10;    // Select probe&amp;#10;    if (target_ntarget === 1) {&amp;#10;        // Probe is one of the targets (excluding fillers)&amp;#10;        let probe_candidates = targets.filter(img =&gt; !img.includes('0.png'));&amp;#10;        if (probe_candidates.length === 0) continue;&amp;#10;        probe_list = probe_candidates[Math.floor(Math.random() * probe_candidates.length)];&amp;#10;    } else {&amp;#10;        // Probe is not in targets&amp;#10;        let probe_pool = real_fractals.filter(img =&gt; !targets.includes(build_full_path(img)));&amp;#10;        if (probe_pool.length === 0) continue;&amp;#10;        probe_list = build_full_path(probe_pool[Math.floor(Math.random() * probe_pool.length)]);&amp;#10;    }&amp;#10;&amp;#10;    // Check if any current images were used in the previous trial&amp;#10;    let current_images = targets.filter(img =&gt; !img.includes('0.png')).concat([probe_list]);&amp;#10;    if (prev_images.some(img =&gt; current_images.includes(img))) {&amp;#10;        continue;  // retry&amp;#10;    }&amp;#10;&amp;#10;    break;  // valid selection&amp;#10;}&amp;#10;&amp;#10;// Assign variables for Builder&amp;#10;[target_1, target_2, target_3, target_4] = targets;&amp;#10;&amp;#10;// Determine probe position&amp;#10;targetpos = 0;&amp;#10;if (target_ntarget === 1) {&amp;#10;    if (probe_list === target_1) targetpos = 1;&amp;#10;    else if (probe_list === target_2) targetpos = 2;&amp;#10;    else if (probe_list === target_3) targetpos = 3;&amp;#10;    else if (probe_list === target_4) targetpos = 4;&amp;#10;}&amp;#10;&amp;#10;// Save data for this trial&amp;#10;features.addData('target_1', target_1);&amp;#10;features.addData('target_2', target_2);&amp;#10;features.addData('target_3', target_3);&amp;#10;features.addData('target_4', target_4);&amp;#10;features.addData('probe_list', probe_list);&amp;#10;features.addData('targetpos', targetpos);&amp;#10;features.addData('used_images', targets.filter(img =&gt; !img.includes('0.png')).concat([probe_list]));&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="EEGtriggerSent = False #EGI&amp;#10;EYEtriggerSent = False #EGI&amp;#10;&amp;#10;#import random&amp;#10;#&amp;#10;## Exclude filler from real fractals&amp;#10;#real_fractals = [img for img in image_pool if '0.png' not in img]&amp;#10;#&amp;#10;## Select target images&amp;#10;#if load == 1:&amp;#10;#    fractal_target = random.choice(real_fractals)&amp;#10;#    targets = ['stimuli/fractals_abstracts_stimuli_101/0.png'] * 3 + [fractal_target]&amp;#10;#elif load == 4:&amp;#10;#    targets = random.sample(real_fractals, 4)&amp;#10;#&amp;#10;#random.shuffle(targets)&amp;#10;#&amp;#10;## Assign targets&amp;#10;#target_1 = targets[0]&amp;#10;#target_2 = targets[1]&amp;#10;#target_3 = targets[2]&amp;#10;#target_4 = targets[3]&amp;#10;#&amp;#10;## Select probe&amp;#10;#if target_ntarget == 1:&amp;#10;#    # Only choose from real fractals in targets (exclude 0.png)&amp;#10;#    probe_candidates = [t for t in targets if '0.png' not in t]&amp;#10;#    probe_list = random.choice(probe_candidates)&amp;#10;#else:&amp;#10;#    probe_pool = [img for img in real_fractals if img not in targets]&amp;#10;#    probe_list = random.choice(probe_pool)&amp;#10;#&amp;#10;## Determine which target position the probe matched (1–4), or 0 if no match&amp;#10;#if target_ntarget == 1:&amp;#10;#    if probe_list == target_1:&amp;#10;#        targetpos = 1&amp;#10;#    elif probe_list == target_2:&amp;#10;#        targetpos = 2&amp;#10;#    elif probe_list == target_3:&amp;#10;#        targetpos = 3&amp;#10;#    elif probe_list == target_4:&amp;#10;#        targetpos = 4&amp;#10;#    else:&amp;#10;#        targetpos = 0  # Fallback, should not happen&amp;#10;#else:&amp;#10;#    targetpos = 0&amp;#10;#&amp;#10;## Save data to loop&amp;#10;#features.addData('target_1', target_1)&amp;#10;#features.addData('target_2', target_2)&amp;#10;#features.addData('target_3', target_3)&amp;#10;#features.addData('target_4', target_4)&amp;#10;#features.addData('probe_list', probe_list)&amp;#10;#features.addData('targetpos', targetpos)&amp;#10;&amp;#10;&amp;#10;#import random&amp;#10;#&amp;#10;## SAFELY get load and target_ntarget from your condition file&amp;#10;## (They should be defined automatically by PsychoPy if listed in the .csv file)&amp;#10;## No need to assign them manually&amp;#10;#&amp;#10;## Get previous images safely&amp;#10;#try:&amp;#10;#    prev_images = features.thisN &gt; 0 and features.trialList[features.thisN - 1].get('used_images', [])&amp;#10;#    if not isinstance(prev_images, list):&amp;#10;#        prev_images = []&amp;#10;#except Exception:&amp;#10;#    prev_images = []&amp;#10;#&amp;#10;## Create list of real fractals (exclude filler &quot;0.png&quot;)&amp;#10;#real_fractals = [img for img in image_pool if '0.png' not in img]&amp;#10;#&amp;#10;## Dynamic function with load and target_ntarget passed from current trial&amp;#10;#def get_new_trial_images(prev_images, load, target_ntarget):&amp;#10;#    while True:&amp;#10;#        if load == 1:&amp;#10;#            fractal_target = random.choice(real_fractals)&amp;#10;#            targets = ['stimuli/fractals_abstracts_stimuli_101/0.png'] * 3 + [fractal_target]&amp;#10;#        elif load == 4:&amp;#10;#            targets = random.sample(real_fractals, 4)&amp;#10;#        else:&amp;#10;#            raise ValueError(f&quot;Unexpected load value: {load}&quot;)&amp;#10;#&amp;#10;#        random.shuffle(targets)&amp;#10;#&amp;#10;#        # Choose probe&amp;#10;#        if target_ntarget == 1:&amp;#10;#            probe_candidates = [t for t in targets if '0.png' not in t]&amp;#10;#            probe_list = random.choice(probe_candidates)&amp;#10;#        else:&amp;#10;#            probe_pool = [img for img in real_fractals if img not in targets]&amp;#10;#            probe_list = random.choice(probe_pool)&amp;#10;#&amp;#10;#        # Collect images used this trial (excluding filler)&amp;#10;#        current_images = [img for img in targets if '0.png' not in img]&amp;#10;#        current_images.append(probe_list)&amp;#10;#&amp;#10;#        # Ensure no repeat from last trial&amp;#10;#        if not any(img in prev_images for img in current_images):&amp;#10;#            return targets, probe_list&amp;#10;#&amp;#10;## Run the function using the dynamic loop values&amp;#10;#targets, probe_list = get_new_trial_images(prev_images, load, target_ntarget)&amp;#10;#&amp;#10;## Assign image slots for Builder components&amp;#10;#target_1, target_2, target_3, target_4 = targets&amp;#10;#&amp;#10;## Determine match location (1–4) or 0&amp;#10;#if target_ntarget == 1:&amp;#10;#    if probe_list == target_1:&amp;#10;#        targetpos = 1&amp;#10;#    elif probe_list == target_2:&amp;#10;#        targetpos = 2&amp;#10;#    elif probe_list == target_3:&amp;#10;#        targetpos = 3&amp;#10;#    elif probe_list == target_4:&amp;#10;#        targetpos = 4&amp;#10;#    else:&amp;#10;#        targetpos = 0&amp;#10;#else:&amp;#10;#    targetpos = 0&amp;#10;#&amp;#10;## Save data&amp;#10;#features.addData('target_1', target_1)&amp;#10;#features.addData('target_2', target_2)&amp;#10;#features.addData('target_3', target_3)&amp;#10;#features.addData('target_4', target_4)&amp;#10;#features.addData('probe_list', probe_list)&amp;#10;#features.addData('targetpos', targetpos)&amp;#10;&amp;#10;&amp;#10;# Get previous images safely for no repeats&amp;#10;try:&amp;#10;    if features.thisN &gt; 0:&amp;#10;        prev_images = features.trialList[features.thisN - 1].get('used_images', [])&amp;#10;        if not isinstance(prev_images, list):&amp;#10;            prev_images = []&amp;#10;    else:&amp;#10;        prev_images = []&amp;#10;except Exception:&amp;#10;    prev_images = []&amp;#10;&amp;#10;# Create list of real fractals (exclude filler &quot;0.png&quot;)&amp;#10;real_fractals = [img for img in image_pool if '0.png' not in img]&amp;#10;&amp;#10;# Main function to generate targets + probe&amp;#10;def get_new_trial_images(prev_images, load, target_ntarget):&amp;#10;    attempts = 0&amp;#10;    while True:&amp;#10;        attempts += 1&amp;#10;        if attempts &gt; 1000:&amp;#10;            print(&quot;ERROR: Too many attempts to generate valid trial images. Breaking loop.&quot;)&amp;#10;            raise RuntimeError(&quot;Failed to generate valid trial images after 1000 attempts&quot;)&amp;#10;&amp;#10;        # LOAD = 1&amp;#10;        if load == 1:&amp;#10;            possible_targets = real_fractals.copy()&amp;#10;            fractal_target = random.choice(possible_targets)&amp;#10;            targets = [build_full_path('0.png')] * 3 + [fractal_target]&amp;#10;&amp;#10;        # LOAD = 4&amp;#10;        elif load == 4:&amp;#10;            all_combos = random.sample(real_fractals, len(real_fractals))&amp;#10;            valid_set = None&amp;#10;            for i in range(len(all_combos) - 3):&amp;#10;                candidate = all_combos[i:i+4]&amp;#10;                valid_set = candidate&amp;#10;                break&amp;#10;            if not valid_set:&amp;#10;                print(f&quot;Attempt {attempts}: No valid set found for load=4&quot;)&amp;#10;                continue&amp;#10;            targets = valid_set&amp;#10;&amp;#10;        else:&amp;#10;            raise ValueError(f&quot;Unexpected load value: {load}&quot;)&amp;#10;&amp;#10;        random.shuffle(targets)&amp;#10;&amp;#10;        # PROBE SELECTION&amp;#10;        if target_ntarget == 1:&amp;#10;            probe_candidates = [t for t in targets if '0.png' not in t]&amp;#10;            if not probe_candidates:&amp;#10;                print(f&quot;Attempt {attempts}: No probe candidates for target_ntarget=1&quot;)&amp;#10;                continue&amp;#10;            probe_list = random.choice(probe_candidates)&amp;#10;        else:&amp;#10;            probe_pool = [img for img in real_fractals if img not in targets]&amp;#10;            if not probe_pool:&amp;#10;                print(f&quot;Attempt {attempts}: No probe pool for nonmatch probe&quot;)&amp;#10;                continue&amp;#10;            probe_list = random.choice(probe_pool)&amp;#10;&amp;#10;        # Check for repeats from previous trial&amp;#10;        current_images = [img for img in targets if '0.png' not in img] + [probe_list]&amp;#10;        if any(img in prev_images for img in current_images):&amp;#10;            print(f&quot;Attempt {attempts}: Repeat detected from previous trial, retrying...&quot;)&amp;#10;            continue&amp;#10;&amp;#10;        print(f&quot;Attempt {attempts}: Success with targets={targets}, probe={probe_list}&quot;)&amp;#10;        return targets, probe_list&amp;#10;&amp;#10;# Run image selection for this trial&amp;#10;targets, probe_list = get_new_trial_images(prev_images, load, target_ntarget)&amp;#10;&amp;#10;# Assign image slots for Builder components&amp;#10;target_1, target_2, target_3, target_4 = targets&amp;#10;&amp;#10;# Determine match location (1–4) or 0&amp;#10;if target_ntarget == 1:&amp;#10;    if probe_list == target_1:&amp;#10;        targetpos = 1&amp;#10;    elif probe_list == target_2:&amp;#10;        targetpos = 2&amp;#10;    elif probe_list == target_3:&amp;#10;        targetpos = 3&amp;#10;    elif probe_list == target_4:&amp;#10;        targetpos = 4&amp;#10;    else:&amp;#10;        targetpos = 0&amp;#10;else:&amp;#10;    targetpos = 0&amp;#10;&amp;#10;# Save trial-level data&amp;#10;features.addData('target_1', target_1)&amp;#10;features.addData('target_2', target_2)&amp;#10;features.addData('target_3', target_3)&amp;#10;features.addData('target_4', target_4)&amp;#10;features.addData('probe_list', probe_list)&amp;#10;features.addData('targetpos', targetpos)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="if expInfo['eeg'] and fix_cross_features.status == STARTED and not EEGtriggerSent:&amp;#10;    win.callOnFlip(ns.send_event,event_type=&quot;STIM&quot;,label=TRG,duration=float(2.5)) #Send the trigger, synced to the screen refresh&amp;#10;    EEGtriggerSent = True&amp;#10;if expInfo['eyetrack'] and fix_cross_features.status == STARTED and not EYEtriggerSent:&amp;#10;     win.callOnFlip(tracker.log_message,TRG)&amp;#10;     EYEtriggerSent = True" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="#if expInfo['eeg']:&amp;#10;#    ns.send_event(event_type=TRG, start=fix_cross_features.started)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_encodeFeatures" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="fix_cross_features" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="stimuli/SDRT/fix.BMP" valType="str" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="fix_cross_features" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.05)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="t1" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$target_1" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="t1" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(-0.1, 0.15)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="$stim_size" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="t2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$target_2" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="t2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0.1, 0.15)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="$stim_size" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="t3" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$target_3" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="t3" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(-0.1, -0.05)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="$stim_size" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="t4" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$target_4" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="t4" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0.1, -0.05)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="$stim_size" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
    </Routine>
    <Routine name="ProbeFeatures">
      <RoutineSettingsComponent name="ProbeFeatures" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="ProbeFeatures" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_probeFeatures" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="prbL = &quot;white&quot;;&amp;#10;prbR = &quot;white&quot;;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="EEGtriggerSent = False&amp;#10;EYEtriggerSent = False&amp;#10;&amp;#10;prbL=&quot;white&quot;&amp;#10;prbR=&quot;white&quot;&amp;#10;&amp;#10;rspprobe=0" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="if expInfo['eeg'] and probe_image.status == STARTED and not EEGtriggerSent:&amp;#10;    win.callOnFlip(ns.send_event,event_type=&quot;PRB+&quot;,label=PRB,duration=float(2.0)) #Send the trigger, synced to the screen refresh&amp;#10;    EEGtriggerSent = True&amp;#10;if expInfo['eyetrack'] and probe_image.status == STARTED and not EYEtriggerSent:&amp;#10;    win.callOnFlip(tracker.log_message,PRB)&amp;#10;    EYEtriggerSent = True&amp;#10;&amp;#10;#if key_resp_feat:&amp;#10;#    if key_resp_feat.keys=='1':&amp;#10;#        prbL=&quot;blue&quot;&amp;#10;#        if expInfo['eeg'] and rspprobe==0:&amp;#10;#            ns.send_event(event_type=&quot;RESP&quot;,label=&quot;RSPL&quot;)&amp;#10;#            rspprobe=1&amp;#10;#    elif key_resp_feat.keys=='2':&amp;#10;#        prbR=&quot;blue&quot;&amp;#10;#        if expInfo['eeg'] and rspprobe==0:&amp;#10;#            ns.send_event(event_type=&quot;RESP&quot;,label=&quot;RSPR&quot;)&amp;#10;#            rspprobe=1&amp;#10;&amp;#10;if key_resp_feat:&amp;#10;    if key_resp_feat.keys=='left':&amp;#10;        prbL=&quot;blue&quot;&amp;#10;        if expInfo['eeg'] and rspprobe==0:&amp;#10;            ns.send_event(event_type=&quot;RESP&quot;,label=&quot;RSPL&quot;)&amp;#10;            rspprobe=1&amp;#10;    elif key_resp_feat.keys=='right':&amp;#10;        prbR=&quot;blue&quot;&amp;#10;        if expInfo['eeg'] and rspprobe==0:&amp;#10;            ns.send_event(event_type=&quot;RESP&quot;,label=&quot;RSPR&quot;)&amp;#10;            rspprobe=1" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if (key_resp_feat) {&amp;#10;    if ((key_resp_feat.keys === &quot;1&quot;) || (key_resp_feat.keys === &quot;left&quot;)) {&amp;#10;        prbL = &quot;blue&quot;;&amp;#10;    } else {&amp;#10;        if ((key_resp_feat.keys === &quot;2&quot;) || (key_resp_feat.keys === &quot;right&quot;)) {&amp;#10;            prbR = &quot;blue&quot;;&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="s_key = key_resp_feat.keys;&amp;#10;if ((s_key === &quot;s&quot;)) {&amp;#10;    features.finished = true;&amp;#10;}&amp;#10;&amp;#10;thisExp=psychoJS.experiment;&amp;#10;&amp;#10;if ((correct_resp === 1) || (correct_resp === &quot;1&quot;)) {&amp;#10;    correctKey = [&quot;1&quot;,&quot;left&quot;];&amp;#10;}&amp;#10;if ((correct_resp === 2) || (correct_resp === &quot;2&quot;)) {&amp;#10;    correctKey = [&quot;2&quot;,&quot;right&quot;];&amp;#10;}&amp;#10;&amp;#10;if ((key_resp_feat.keys === correctKey[0]) || (key_resp_feat.keys === correctKey[1])) {&amp;#10;    key_resp_feat.corr = true;&amp;#10;} else {&amp;#10;    key_resp_feat.corr = false;&amp;#10;}&amp;#10;&amp;#10;thisExp.addData(&quot;correctKey&quot;, correctKey);&amp;#10;thisExp.addData(&quot;key_resp_corr&quot;, key_resp_feat.corr)" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if expInfo['eeg'] and rspprobe==0:&amp;#10;    ns.send_event(event_type=&quot;RESP&quot;,label=&quot;MISS&quot;)&amp;#10;    rspprobe=1" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_probeFeatures" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="probe_image" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$probe_list" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="probe_image" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.05)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="$stim_size" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <KeyboardComponent name="key_resp_feat" plugin="None">
        <Param val="'1','left','2','right','s'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="$correct_resp2" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_feat" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="first key" valType="str" updates="constant" name="store"/>
        <Param val="True" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="features_LEFT" plugin="None">
        <Param val="$prbL" valType="str" updates="set every frame" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="RTL" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.08" valType="code" updates="constant" name="letterHeight"/>
        <Param val="features_LEFT" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(-0.20,-0.5)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="&lt;--&amp;#10;Same" valType="extendedStr" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="features_RIGHT" plugin="None">
        <Param val="$prbR" valType="str" updates="set every frame" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.08" valType="code" updates="constant" name="letterHeight"/>
        <Param val="features_RIGHT" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0.20,-0.5)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="--&gt;&amp;#10;Different" valType="extendedStr" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="FB_Features">
      <RoutineSettingsComponent name="FB_Features" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="FB_Features" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_FB_Features" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="resp = psychoJS.experiment._trialsData;&amp;#10;// Get count of correct trials&amp;#10;acc = 0;&amp;#10;//acc = resp.reduce((a, b) =&gt; a + b['key_resp_feat.corr'], 0);&amp;#10;// Get Trial Length&amp;#10;//num = resp.length;&amp;#10;num=features.thisN;&amp;#10;&amp;#10;// Mean RTs:&amp;#10;sumRt = 0;&amp;#10;for (let eachResp=0; eachResp&lt;psychoJS.experiment._trialsData.length; eachResp++) &amp;#10;{&amp;#10;  if ('key_resp_feat.rt' in psychoJS.experiment._trialsData[eachResp]) {&amp;#10;    sumRt += psychoJS.experiment._trialsData[eachResp]['key_resp_feat.rt'];&amp;#10;    acc += psychoJS.experiment._trialsData[eachResp]['key_resp_feat.corr'];&amp;#10;&amp;#10;  }&amp;#10;}&amp;#10;meanRt=(sumRt/num);&amp;#10;//console.log(sumRt)&amp;#10;pacc=( acc / num ) * 100;&amp;#10;//console.log(pacc)&amp;#10;&amp;#10;//message for display&amp;#10;msg = &quot;Great Job !!!!!!\n\nYou got &quot;+String(parseFloat(pacc).toFixed(2))+&quot;% correct. \nYour response time is &quot;+String(parseFloat(meanRt).toFixed(2))+&quot; sec.&quot;;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# get reaction time and accuracy&amp;#10;fmeanRt = features.data['key_resp_feat.rt'].mean()&amp;#10;facc = features.data['key_resp_feat.corr'].sum()&amp;#10;# calculate percent accuracy&amp;#10;num = features.nTotal&amp;#10;fpacc=(facc/num)*100&amp;#10;# message for display&amp;#10;msg = &quot;Great Job !!!!!!\n\nYou got %0.2f %% correct. \nYour response time is %0.2f sec.&quot; %(fpacc,fmeanRt) &amp;#10;&amp;#10;core.wait(3) # sleep 3 seconds&amp;#10;&amp;#10;if expInfo['eyetrack']:&amp;#10;    # stop recording&amp;#10;    tracker.log_message(&quot;STOP&quot;)&amp;#10;    tracker.stop_recording()&amp;#10;    # close connection to the tracker&amp;#10;    tracker.close()&amp;#10;&amp;#10;if expInfo['eeg']:&amp;#10;    ns.send_event(event_type=&quot;STOP&quot;)&amp;#10;    ns.end_rec()&amp;#10;    ns.disconnect()&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_FB_Features" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="text_Features" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.06" valType="code" updates="constant" name="letterHeight"/>
        <Param val="text_Features" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.05)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="5.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$msg" valType="extendedStr" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="1.8" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="instrFeatures">
      <RoutineSettingsComponent name="instrFeatures" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="instrFeatures" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="expInfo['DoPractice'] == False" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_restartNS" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if expInfo['eeg']:&amp;#10;    # import egi_pynetstation&amp;#10;    from egi_pynetstation.NetStation import NetStation&amp;#10;    # address and port &amp;#10;    ns = NetStation('169.254.111.111', 55513)&amp;#10;    # Set an NTP clock server address as an IPv4 string&amp;#10;    IP_ntp = '169.254.111.111'&amp;#10;    ns.connect(ntp_ip=IP_ntp)&amp;#10;    ns.begin_rec() # Begin recording&amp;#10;    ns.send_event(event_type=&quot;STRT&quot;,label=&quot;STRT&quot;,start=0.0)&amp;#10;    # NOTE: when using the event sender, &quot;now&quot;.&amp;#10;    # Tests on a Windows 7 machine with PsychoPy indicate that the&amp;#10;    # latency in real time is about 54 +/- 3 ms for a short experiment.&amp;#10;&amp;#10;RunningClock = globalClock.getTime()&amp;#10;thisExp.addData('RunningClock',RunningClock)&amp;#10;&amp;#10;if expInfo['eyetrack']:&amp;#10;    # import pytribe&amp;#10;    from PyTribe.pytribe import EyeTribe&amp;#10;    # Data file name stem = absolute path + name; later add .psyexp, .csv, .log, etc&amp;#10;    SUB = u'sub-%s' % (expInfo['participant'])&amp;#10;    TIMESTRT = time.strftime(&quot;%Y%m%dT%H%M%S&quot;)&amp;#10;    EYELOG = u'sub-%s_task-%s_eyetrack_%s' % (expInfo['participant'], expName, TIMESTRT)&amp;#10;    DIR = os.path.dirname(os.path.abspath(__file__))&amp;#10;    LOGFILE = os.path.join(DIR, 'data', EYELOG)&amp;#10;    # start communications with the EyeTribe tracker&amp;#10;    tracker = EyeTribe(logfilename=LOGFILE)&amp;#10;    # start recording gaze data&amp;#10;    tracker.start_recording()&amp;#10;    tracker.log_message(&quot;STRT&quot;)&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_restartNS" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="text_features" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.08" valType="code" updates="constant" name="letterHeight"/>
        <Param val="text_features" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Remember, your task is to memorize the features of the dots. When a single dot appears at the center of the screen:&amp;#10;&amp;#10;PRESS the LEFT button if you think the dot is the SAME as one of the previous dots&amp;#10;&amp;#10;PRESS the RIGHT button if you think the dot is DIFFERENT than one of the previous dots&amp;#10;&amp;#10;Press [SPACE] to begin the task" valType="extendedStr" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="1.8" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_2" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_2" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="instrLetters">
      <RoutineSettingsComponent name="instrLetters" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="instrLetters" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_restartNS_letters" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if expInfo['eeg']:&amp;#10;    # import egi_pynetstation&amp;#10;    from egi_pynetstation.NetStation import NetStation&amp;#10;    # address and port &amp;#10;    ns = NetStation('169.254.111.111', 55513)&amp;#10;    # Set an NTP clock server address as an IPv4 string&amp;#10;    IP_ntp = '169.254.111.111'&amp;#10;    ns.connect(ntp_ip=IP_ntp)&amp;#10;    ns.begin_rec() # Begin recording&amp;#10;    ns.send_event(event_type=&quot;STRT&quot;,label=&quot;STRT&quot;,start=0.0)&amp;#10;&amp;#10;RunningClock = globalClock.getTime()&amp;#10;thisExp.addData('RunningClock',RunningClock)&amp;#10;&amp;#10;if expInfo['eyetrack']:&amp;#10;    # import pytribe&amp;#10;    from PyTribe.pytribe import EyeTribe&amp;#10;    # Data file name stem = absolute path + name; later add .psyexp, .csv, .log, etc&amp;#10;    SUB = u'sub-%s' % (expInfo['participant'])&amp;#10;    TIMESTRT = time.strftime(&quot;%Y%m%dT%H%M%S&quot;)&amp;#10;    #EYELOG = SUB + '_task-swm_acq-eyetribe_eyetrack_' + TIMESTRT&amp;#10;    EYELOG = u'sub-%s_task-letters_eyetrack_%s' % (expInfo['participant'], TIMESTRT)&amp;#10;    DIR = os.path.dirname(os.path.abspath(__file__))&amp;#10;    LOGFILE = os.path.join(DIR, 'data', EYELOG)&amp;#10;    #EYELOG = _thisDir + os.sep + u'data/sub-%s_task-%s_eyetrack_%s' % (expInfo['participant'], expName, expInfo['date'])&amp;#10;    # start communications with the EyeTribe tracker&amp;#10;    tracker = EyeTribe(logfilename=LOGFILE)&amp;#10;    # start recording gaze data&amp;#10;    tracker.start_recording()&amp;#10;    #tracker.log_message(&quot;recording_started&quot;)&amp;#10;    tracker.log_message(&quot;STRT&quot;)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_restartNS_letters" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="text_letters" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.08" valType="code" updates="constant" name="letterHeight"/>
        <Param val="text_letters" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Remember, your task is to memorize the list of letter pairs. When a single letter pair appears at the center of the screen:&amp;#10;&amp;#10;PRESS the LEFT button if you think the letter pair is the SAME as one of the previous letter pairs&amp;#10;&amp;#10;PRESS the RIGHT button if you think the letter pair is DIFFERENT than one of the previous letter pairs&amp;#10;&amp;#10;Press [SPACE] to begin the task" valType="extendedStr" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="1.8" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_3" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_3" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="instrSDRT">
      <RoutineSettingsComponent name="instrSDRT" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="instrSDRT" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_hardware" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if expInfo['eeg']:&amp;#10;    # import egi_pynetstation&amp;#10;    from egi_pynetstation.NetStation import NetStation&amp;#10;    # address and port &amp;#10;    ns = NetStation('169.254.111.111', 55513)&amp;#10;    # Set an NTP clock server address as an IPv4 string&amp;#10;    IP_ntp = '169.254.111.111'&amp;#10;    ns.connect(ntp_ip=IP_ntp)&amp;#10;    ns.begin_rec() # Begin recording&amp;#10;    ns.send_event(event_type=&quot;STRT&quot;,label=&quot;STRT&quot;,start=0.0)&amp;#10;    # NOTE: when using the event sender, &quot;now&quot;.&amp;#10;    # Tests on a Windows 7 machine with PsychoPy indicate that the&amp;#10;    # latency in real time is about 54 +/- 3 ms for a short experiment.&amp;#10;&amp;#10;RunningClock = globalClock.getTime()&amp;#10;thisExp.addData('RunningClock',RunningClock)&amp;#10;&amp;#10;if expInfo['eyetrack']:&amp;#10;    # import pytribe&amp;#10;    from PyTribe.pytribe import EyeTribe&amp;#10;    # Data file name stem = absolute path + name; later add .psyexp, .csv, .log, etc&amp;#10;    SUB = u'sub-%s' % (expInfo['participant'])&amp;#10;    TIMESTRT = time.strftime(&quot;%Y%m%dT%H%M%S&quot;)&amp;#10;    #EYELOG = SUB + '_task-swm_acq-eyetribe_eyetrack_' + TIMESTRT&amp;#10;    EYELOG = u'sub-%s_task-sdrt_eyetrack_%s' % (expInfo['participant'], TIMESTRT)&amp;#10;    DIR = os.path.dirname(os.path.abspath(__file__))&amp;#10;    LOGFILE = os.path.join(DIR, 'data', EYELOG)&amp;#10;    #EYELOG = _thisDir + os.sep + u'data/sub-%s_task-%s_eyetrack_%s' % (expInfo['participant'], expName, expInfo['date'])&amp;#10;    # start communications with the EyeTribe tracker&amp;#10;    tracker = EyeTribe(logfilename=LOGFILE)&amp;#10;    # start recording gaze data&amp;#10;    tracker.start_recording()&amp;#10;    #tracker.log_message(&quot;recording_started&quot;)&amp;#10;    tracker.log_message(&quot;STRT&quot;)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="#if expInfo['eeg']:&amp;#10;#    ns.end_rec()&amp;#10;#    ns.disconnect()&amp;#10;    &amp;#10;#if expInfo['eyetrack']:&amp;#10;    # stop recording&amp;#10;#    tracker.stop_recording()&amp;#10;    # close connection to the tracker&amp;#10;#    tracker.close()" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="document.body.style.cursor='auto';" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_hardware" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="text_instruct" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.08" valType="code" updates="constant" name="letterHeight"/>
        <Param val="text_instruct" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Remember, your task is memorize the location of the yellow dots. When the green dot appears:&amp;#10;&amp;#10;PRESS the LEFT button if you think the green dot is in the SAME place as one of the yellow dots&amp;#10;&amp;#10;PRESS the RIGHT button if you think the green dot is in a DIFFERENT place than any of the yellow dots&amp;#10;&amp;#10;Press [SPACE] to begin the task" valType="extendedStr" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="1.8" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="start_resp" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="start_resp" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="Start">
      <RoutineSettingsComponent name="Start" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Start" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_start" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="document.body.style.cursor='none';&amp;#10;&amp;#10;var sUsrAg;&amp;#10;var nIdx;&amp;#10;function getBrowserId () {&amp;#10; var browsers = [&quot;MSIE&quot;, &quot;Firefox&quot;, &quot;Safari&quot;, &quot;Chrome&quot;, &quot;Opera&quot;];&amp;#10; sUsrAg = window.navigator.userAgent,&amp;#10; nIdx = browsers.length - 1;&amp;#10; for (nIdx; nIdx &gt; -1 &amp;&amp; sUsrAg.indexOf(browsers [nIdx]) === -1; nIdx--);&amp;#10; &amp;#10;  return browsers[nIdx];&amp;#10;}&amp;#10;// save cpu &amp; browser information&amp;#10;thisExp=psychoJS.experiment;&amp;#10;expInfo['OS'] = window.navigator.platform;&amp;#10;expInfo['browser'] = getBrowserId();&amp;#10;expInfo['xResolution'] = screen.width;&amp;#10;expInfo['yResolution'] = screen.height;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="win.mouseVisible = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_start" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Question1">
      <RoutineSettingsComponent name="Question1" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Question1" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="TextQ1" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.08" valType="code" updates="constant" name="letterHeight"/>
        <Param val="TextQ1" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.4)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="What percentage of your responses do you think you got correct (0-100)?" valType="extendedStr" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <RatingScaleComponent name="RatingQ1" plugin="None">
        <Param val="" valType="list" updates="constant" name="categoryChoices"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="bool" updates="constant" name="disappear"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="" valType="code" updates="constant" name="high"/>
        <Param val="" valType="list" updates="constant" name="labels"/>
        <Param val="" valType="code" updates="constant" name="low"/>
        <Param val="triangle" valType="str" updates="constant" name="marker"/>
        <Param val="" valType="str" updates="constant" name="markerStart"/>
        <Param val="RatingQ1" valType="code" updates="None" name="name"/>
        <Param val="0, 0" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="str" updates="constant" name="scaleDescription"/>
        <Param val="True" valType="bool" updates="constant" name="showAccept"/>
        <Param val="False" valType="bool" updates="constant" name="singleClick"/>
        <Param val="1.0" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="constant" name="storeHistory"/>
        <Param val="True" valType="bool" updates="constant" name="storeRating"/>
        <Param val="True" valType="bool" updates="constant" name="storeRatingTime"/>
        <Param val="False" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="tickHeight"/>
        <Param val="False" valType="bool" updates="constant" name="visualAnalogScale"/>
      </RatingScaleComponent>
      <TextComponent name="TextIns1" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="code" updates="constant" name="letterHeight"/>
        <Param val="TextIns1" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, -0.35)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="(press the left button decrease your percentage, press the right button to increase your percentage)" valType="extendedStr" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="Question2">
      <RoutineSettingsComponent name="Question2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Question2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="TextQ2" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.08" valType="code" updates="constant" name="letterHeight"/>
        <Param val="TextQ2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.4)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="How well do you think you did on this task (0-100)? " valType="extendedStr" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <RatingScaleComponent name="RatingQ2" plugin="None">
        <Param val="" valType="list" updates="constant" name="categoryChoices"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="bool" updates="constant" name="disappear"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="" valType="code" updates="constant" name="high"/>
        <Param val="" valType="list" updates="constant" name="labels"/>
        <Param val="" valType="code" updates="constant" name="low"/>
        <Param val="triangle" valType="str" updates="constant" name="marker"/>
        <Param val="" valType="str" updates="constant" name="markerStart"/>
        <Param val="RatingQ2" valType="code" updates="None" name="name"/>
        <Param val="0,0" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="str" updates="constant" name="scaleDescription"/>
        <Param val="True" valType="bool" updates="constant" name="showAccept"/>
        <Param val="False" valType="bool" updates="constant" name="singleClick"/>
        <Param val="1.0" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="constant" name="storeHistory"/>
        <Param val="True" valType="bool" updates="constant" name="storeRating"/>
        <Param val="True" valType="bool" updates="constant" name="storeRatingTime"/>
        <Param val="False" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="tickHeight"/>
        <Param val="False" valType="bool" updates="constant" name="visualAnalogScale"/>
      </RatingScaleComponent>
      <TextComponent name="TextIns2" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="code" updates="constant" name="letterHeight"/>
        <Param val="TextIns2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, -0.35)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="(press the left button decrease your confidence, press the right button to increase your confidence)" valType="extendedStr" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="gReady">
      <RoutineSettingsComponent name="gReady" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="gReady" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="expInfo['DoPractice'] == False" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="gtReady" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="gtReady" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val=" -- get ready --" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_gR" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_gR" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="Questions">
      <RoutineSettingsComponent name="Questions" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Questions" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="text_questions" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_questions" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Do you have any questions? &amp;#10;&amp;#10;&amp;#10;&amp;#10;Press RIGHT to continue" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_questions" plugin="None">
        <Param val="'right','2'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_questions" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="LetsPractice">
      <RoutineSettingsComponent name="LetsPractice" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="LetsPractice" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="expInfo['DoPractice'] == False" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="Practice1" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="Practice1" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Let's practice&amp;#10;&amp;#10;&amp;#10;&amp;#10;Press LEFT to continue" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_practice1" plugin="None">
        <Param val="'left','1'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_practice1" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="LetsPractice_2">
      <RoutineSettingsComponent name="LetsPractice_2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="LetsPractice_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="Practice" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="Practice" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Let's practice&amp;#10;&amp;#10;&amp;#10;&amp;#10;Press LEFT to continue" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_practice" plugin="None">
        <Param val="'left','1'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_practice" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="FixationP">
      <RoutineSettingsComponent name="FixationP" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="FixationP" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="expInfo['DoPractice'] == False" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <ImageComponent name="image_fixation_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="stimuli/SDRT/fix.BMP" valType="str" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="image_fixation_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.05)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
    </Routine>
    <Routine name="EncondeFeaturesP">
      <RoutineSettingsComponent name="EncondeFeaturesP" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="EncondeFeaturesP" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="expInfo['DoPractice'] == False" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <ImageComponent name="fix_cross_features_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="stimuli/SDRT/fix.BMP" valType="str" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="fix_cross_features_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.05)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="t1_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$targetP_1" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="t1_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(-0.1, 0.15)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="$stim_size" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="t2_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$targetP_2" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="t2_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0.1, 0.15)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="$stim_size" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="t3_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$targetP_3" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="t3_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(-0.1, -0.05)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="$stim_size" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="t4_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$targetP_4" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="t4_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0.1, -0.05)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="$stim_size" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
    </Routine>
    <Routine name="MaintenanceP">
      <RoutineSettingsComponent name="MaintenanceP" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="MaintenanceP" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="expInfo['DoPractice'] == False" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <ImageComponent name="image_maint_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="stimuli/SDRT/fix.BMP" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="image_maint_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.05)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="3" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
    </Routine>
    <Routine name="ProbeFeaturesP">
      <RoutineSettingsComponent name="ProbeFeaturesP" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="ProbeFeaturesP" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="expInfo['DoPractice'] == False" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_probeFeatures_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="prbL = &quot;white&quot;;&amp;#10;prbR = &quot;white&quot;;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="prbL=&quot;white&quot;&amp;#10;prbR=&quot;white&quot;&amp;#10;&amp;#10;rspprobe=0" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="#if key_resp_feat_2:&amp;#10;#    if key_resp_feat_2.keys=='1':&amp;#10;#        prbL=&quot;blue&quot;&amp;#10;#    elif key_resp_feat_2.keys=='2':&amp;#10;#        prbR=&quot;blue&quot;&amp;#10;        &amp;#10;if key_resp_feat_2:&amp;#10;   if key_resp_feat_2.keys=='left':&amp;#10;        prbL=&quot;blue&quot;&amp;#10;   elif key_resp_feat_2.keys=='right':&amp;#10;        prbR=&quot;blue&quot;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if (key_resp_feat_2) {&amp;#10;    if ((key_resp_feat_2.keys === &quot;1&quot;) || (key_resp_feat_2.keys === &quot;left&quot;)) {&amp;#10;        prbL = &quot;blue&quot;;&amp;#10;    } else {&amp;#10;        if ((key_resp_feat_2.keys === &quot;2&quot;) || (key_resp_feat_2.keys === &quot;right&quot;)) {&amp;#10;            prbR = &quot;blue&quot;;&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="s_key = key_resp_feat_2.keys;&amp;#10;if ((s_key === &quot;s&quot;)) {&amp;#10;    features.finished = true;&amp;#10;}&amp;#10;&amp;#10;thisExp=psychoJS.experiment;&amp;#10;&amp;#10;if ((correct_resp === 1) || (correct_resp === &quot;1&quot;)) {&amp;#10;    correctKey = [&quot;1&quot;,&quot;left&quot;];&amp;#10;}&amp;#10;if ((correct_resp === 2) || (correct_resp === &quot;2&quot;)) {&amp;#10;    correctKey = [&quot;2&quot;,&quot;right&quot;];&amp;#10;}&amp;#10;&amp;#10;if ((key_resp_feat_2.keys === correctKey[0]) || (key_resp_feat_2.keys === correctKey[1])) {&amp;#10;    key_resp_feat_2.corr = true;&amp;#10;} else {&amp;#10;    key_resp_feat_2.corr = false;&amp;#10;}&amp;#10;&amp;#10;thisExp.addData(&quot;correctKey&quot;, correctKey);&amp;#10;thisExp.addData(&quot;key_resp_corr&quot;, key_resp_feat.corr)" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_probeFeatures_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="probe_image_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$probeP_list" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="probe_image_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.05)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="$stim_size" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <KeyboardComponent name="key_resp_feat_2" plugin="None">
        <Param val="'1','left','2','right','s'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="$correct_resp" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_feat_2" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="first key" valType="str" updates="constant" name="store"/>
        <Param val="True" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="features_LEFT_2" plugin="None">
        <Param val="$prbL" valType="str" updates="set every frame" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="RTL" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.08" valType="code" updates="constant" name="letterHeight"/>
        <Param val="features_LEFT_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(-0.20,-0.5)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="&lt;--&amp;#10;Same" valType="extendedStr" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="features_RIGHT_2" plugin="None">
        <Param val="$prbR" valType="str" updates="set every frame" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.08" valType="code" updates="constant" name="letterHeight"/>
        <Param val="features_RIGHT_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0.20,-0.5)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="--&gt;&amp;#10;Different" valType="extendedStr" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="ISIP">
      <RoutineSettingsComponent name="ISIP" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="ISIP" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="expInfo['DoPractice'] == False" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <ImageComponent name="image_ISI_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="stimuli/SDRT/BLANK.BMP" valType="str" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="image_ISI_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.05)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="Start"/>
    <Routine name="instrFeatures"/>
    <Routine name="LetsPractice"/>
    <Routine name="gReady"/>
    <Routine name="getReady"/>
    <LoopInitiator loopType="TrialHandler" name="trials_practice">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('Trial', 12), ('target_1', 'stimuli/fractals_abstracts_stimuli_101/11.png'), ('target_2', 'stimuli/fractals_abstracts_stimuli_101/0.png'), ('target_3', 'stimuli/fractals_abstracts_stimuli_101/0.png'), ('target_4', 'stimuli/fractals_abstracts_stimuli_101/0.png'), ('probe_list', 'stimuli/fractals_abstracts_stimuli_101/11.png'), ('condition', 'fractals'), ('mask', 0), ('stim_size', 0.15), ('load', 1), ('correct_resp', 1), ('target_ntarget', 1), ('imagegroup', 0), ('targetpos', 1), ('matcharrow', '{LEFTARROW}')]), OrderedDict([('Trial', 33), ('target_1', 'stimuli/fractals_abstracts_stimuli_101/2.png'), ('target_2', 'stimuli/fractals_abstracts_stimuli_101/52.png'), ('target_3', 'stimuli/fractals_abstracts_stimuli_101/27.png'), ('target_4', 'stimuli/fractals_abstracts_stimuli_101/77.png'), ('probe_list', 'stimuli/fractals_abstracts_stimuli_101/22.png'), ('condition', 'fractals'), ('mask', 0), ('stim_size', 0.15), ('load', 4), ('correct_resp', 2), ('target_ntarget', 0), ('imagegroup', 0), ('targetpos', 0), ('matcharrow', '{RIGHTARROW}')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="conditions_block/fractals_practice.csv" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="trials_practice" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="FixationP"/>
    <Routine name="EncondeFeaturesP"/>
    <Routine name="MaintenanceP"/>
    <Routine name="ProbeFeaturesP"/>
    <Routine name="ISIP"/>
    <LoopTerminator name="trials_practice"/>
    <Routine name="Questions"/>
    <Routine name="gReady"/>
    <Routine name="getReady"/>
    <LoopInitiator loopType="TrialHandler" name="features">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('Trial', 1), ('condition', 'fractals'), ('mask', 0), ('stim_size', 0.15), ('load', 1), ('correct_resp1', 2), ('correct_resp2', 'right'), ('target_ntarget', 0), ('imagegroup', 0), ('matcharrow', '{RIGHTARROW}')]), OrderedDict([('Trial', 2), ('condition', 'fractals'), ('mask', 0), ('stim_size', 0.15), ('load', 1), ('correct_resp1', 2), ('correct_resp2', 'right'), ('target_ntarget', 0), ('imagegroup', 0), ('matcharrow', '{RIGHTARROW}')]), OrderedDict([('Trial', 3), ('condition', 'fractals'), ('mask', 0), ('stim_size', 0.15), ('load', 1), ('correct_resp1', 2), ('correct_resp2', 'right'), ('target_ntarget', 0), ('imagegroup', 0), ('matcharrow', '{RIGHTARROW}')]), OrderedDict([('Trial', 4), ('condition', 'fractals'), ('mask', 0), ('stim_size', 0.15), ('load', 1), ('correct_resp1', 2), ('correct_resp2', 'right'), ('target_ntarget', 0), ('imagegroup', 0), ('matcharrow', '{RIGHTARROW}')]), OrderedDict([('Trial', 5), ('condition', 'fractals'), ('mask', 0), ('stim_size', 0.15), ('load', 1), ('correct_resp1', 2), ('correct_resp2', 'right'), ('target_ntarget', 0), ('imagegroup', 0), ('matcharrow', '{RIGHTARROW}')]), OrderedDict([('Trial', 6), ('condition', 'fractals'), ('mask', 0), ('stim_size', 0.15), ('load', 1), ('correct_resp1', 2), ('correct_resp2', 'right'), ('target_ntarget', 0), ('imagegroup', 0), ('matcharrow', '{RIGHTARROW}')]), OrderedDict([('Trial', 7), ('condition', 'fractals'), ('mask', 0), ('stim_size', 0.15), ('load', 1), ('correct_resp1', 2), ('correct_resp2', 'right'), ('target_ntarget', 0), ('imagegroup', 0), ('matcharrow', '{RIGHTARROW}')]), OrderedDict([('Trial', 8), ('condition', 'fractals'), ('mask', 0), ('stim_size', 0.15), ('load', 1), ('correct_resp1', 2), ('correct_resp2', 'right'), ('target_ntarget', 0), ('imagegroup', 0), ('matcharrow', '{RIGHTARROW}')]), OrderedDict([('Trial', 9), ('condition', 'fractals'), ('mask', 0), ('stim_size', 0.15), ('load', 1), ('correct_resp1', 2), ('correct_resp2', 'right'), ('target_ntarget', 0), ('imagegroup', 0), ('matcharrow', '{RIGHTARROW}')]), OrderedDict([('Trial', 10), ('condition', 'fractals'), ('mask', 0), ('stim_size', 0.15), ('load', 1), ('correct_resp1', 2), ('correct_resp2', 'right'), ('target_ntarget', 0), ('imagegroup', 0), ('matcharrow', '{RIGHTARROW}')]), OrderedDict([('Trial', 11), ('condition', 'fractals'), ('mask', 0), ('stim_size', 0.15), ('load', 1), ('correct_resp1', 1), ('correct_resp2', 'left'), ('target_ntarget', 1), ('imagegroup', 0), ('matcharrow', '{LEFTARROW}')]), OrderedDict([('Trial', 12), ('condition', 'fractals'), ('mask', 0), ('stim_size', 0.15), ('load', 1), ('correct_resp1', 1), ('correct_resp2', 'left'), ('target_ntarget', 1), ('imagegroup', 0), ('matcharrow', '{LEFTARROW}')]), OrderedDict([('Trial', 13), ('condition', 'fractals'), ('mask', 0), ('stim_size', 0.15), ('load', 1), ('correct_resp1', 1), ('correct_resp2', 'left'), ('target_ntarget', 1), ('imagegroup', 0), ('matcharrow', '{LEFTARROW}')]), OrderedDict([('Trial', 14), ('condition', 'fractals'), ('mask', 0), ('stim_size', 0.15), ('load', 1), ('correct_resp1', 1), ('correct_resp2', 'left'), ('target_ntarget', 1), ('imagegroup', 0), ('matcharrow', '{LEFTARROW}')]), OrderedDict([('Trial', 15), ('condition', 'fractals'), ('mask', 0), ('stim_size', 0.15), ('load', 1), ('correct_resp1', 1), ('correct_resp2', 'left'), ('target_ntarget', 1), ('imagegroup', 0), ('matcharrow', '{LEFTARROW}')]), OrderedDict([('Trial', 16), ('condition', 'fractals'), ('mask', 0), ('stim_size', 0.15), ('load', 1), ('correct_resp1', 1), ('correct_resp2', 'left'), ('target_ntarget', 1), ('imagegroup', 0), ('matcharrow', '{LEFTARROW}')]), OrderedDict([('Trial', 17), ('condition', 'fractals'), ('mask', 0), ('stim_size', 0.15), ('load', 1), ('correct_resp1', 1), ('correct_resp2', 'left'), ('target_ntarget', 1), ('imagegroup', 0), ('matcharrow', '{LEFTARROW}')]), OrderedDict([('Trial', 18), ('condition', 'fractals'), ('mask', 0), ('stim_size', 0.15), ('load', 1), ('correct_resp1', 1), ('correct_resp2', 'left'), ('target_ntarget', 1), ('imagegroup', 0), ('matcharrow', '{LEFTARROW}')]), OrderedDict([('Trial', 19), ('condition', 'fractals'), ('mask', 0), ('stim_size', 0.15), ('load', 1), ('correct_resp1', 1), ('correct_resp2', 'left'), ('target_ntarget', 1), ('imagegroup', 0), ('matcharrow', '{LEFTARROW}')]), OrderedDict([('Trial', 20), ('condition', 'fractals'), ('mask', 0), ('stim_size', 0.15), ('load', 1), ('correct_resp1', 1), ('correct_resp2', 'left'), ('target_ntarget', 1), ('imagegroup', 0), ('matcharrow', '{LEFTARROW}')]), OrderedDict([('Trial', 21), ('condition', 'fractals'), ('mask', 0), ('stim_size', 0.15), ('load', 4), ('correct_resp1', 1), ('correct_resp2', 'left'), ('target_ntarget', 1), ('imagegroup', 0), ('matcharrow', '{LEFTARROW}')]), OrderedDict([('Trial', 22), ('condition', 'fractals'), ('mask', 0), ('stim_size', 0.15), ('load', 4), ('correct_resp1', 1), ('correct_resp2', 'left'), ('target_ntarget', 1), ('imagegroup', 0), ('matcharrow', '{LEFTARROW}')]), OrderedDict([('Trial', 23), ('condition', 'fractals'), ('mask', 0), ('stim_size', 0.15), ('load', 4), ('correct_resp1', 1), ('correct_resp2', 'left'), ('target_ntarget', 1), ('imagegroup', 0), ('matcharrow', '{LEFTARROW}')]), OrderedDict([('Trial', 24), ('condition', 'fractals'), ('mask', 0), ('stim_size', 0.15), ('load', 4), ('correct_resp1', 1), ('correct_resp2', 'left'), ('target_ntarget', 1), ('imagegroup', 0), ('matcharrow', '{LEFTARROW}')]), OrderedDict([('Trial', 25), ('condition', 'fractals'), ('mask', 0), ('stim_size', 0.15), ('load', 4), ('correct_resp1', 1), ('correct_resp2', 'left'), ('target_ntarget', 1), ('imagegroup', 0), ('matcharrow', '{LEFTARROW}')]), OrderedDict([('Trial', 26), ('condition', 'fractals'), ('mask', 0), ('stim_size', 0.15), ('load', 4), ('correct_resp1', 1), ('correct_resp2', 'left'), ('target_ntarget', 1), ('imagegroup', 0), ('matcharrow', '{LEFTARROW}')]), OrderedDict([('Trial', 27), ('condition', 'fractals'), ('mask', 0), ('stim_size', 0.15), ('load', 4), ('correct_resp1', 1), ('correct_resp2', 'left'), ('target_ntarget', 1), ('imagegroup', 0), ('matcharrow', '{LEFTARROW}')]), OrderedDict([('Trial', 28), ('condition', 'fractals'), ('mask', 0), ('stim_size', 0.15), ('load', 4), ('correct_resp1', 1), ('correct_resp2', 'left'), ('target_ntarget', 1), ('imagegroup', 0), ('matcharrow', '{LEFTARROW}')]), OrderedDict([('Trial', 29), ('condition', 'fractals'), ('mask', 0), ('stim_size', 0.15), ('load', 4), ('correct_resp1', 1), ('correct_resp2', 'left'), ('target_ntarget', 1), ('imagegroup', 0), ('matcharrow', '{LEFTARROW}')]), OrderedDict([('Trial', 30), ('condition', 'fractals'), ('mask', 0), ('stim_size', 0.15), ('load', 4), ('correct_resp1', 1), ('correct_resp2', 'right'), ('target_ntarget', 1), ('imagegroup', 0), ('matcharrow', '{LEFTARROW}')]), OrderedDict([('Trial', 31), ('condition', 'fractals'), ('mask', 0), ('stim_size', 0.15), ('load', 4), ('correct_resp1', 2), ('correct_resp2', 'right'), ('target_ntarget', 0), ('imagegroup', 0), ('matcharrow', '{RIGHTARROW}')]), OrderedDict([('Trial', 32), ('condition', 'fractals'), ('mask', 0), ('stim_size', 0.15), ('load', 4), ('correct_resp1', 2), ('correct_resp2', 'right'), ('target_ntarget', 0), ('imagegroup', 0), ('matcharrow', '{RIGHTARROW}')]), OrderedDict([('Trial', 33), ('condition', 'fractals'), ('mask', 0), ('stim_size', 0.15), ('load', 4), ('correct_resp1', 2), ('correct_resp2', 'right'), ('target_ntarget', 0), ('imagegroup', 0), ('matcharrow', '{RIGHTARROW}')]), OrderedDict([('Trial', 34), ('condition', 'fractals'), ('mask', 0), ('stim_size', 0.15), ('load', 4), ('correct_resp1', 2), ('correct_resp2', 'right'), ('target_ntarget', 0), ('imagegroup', 0), ('matcharrow', '{RIGHTARROW}')]), OrderedDict([('Trial', 35), ('condition', 'fractals'), ('mask', 0), ('stim_size', 0.15), ('load', 4), ('correct_resp1', 2), ('correct_resp2', 'right'), ('target_ntarget', 0), ('imagegroup', 0), ('matcharrow', '{RIGHTARROW}')]), OrderedDict([('Trial', 36), ('condition', 'fractals'), ('mask', 0), ('stim_size', 0.15), ('load', 4), ('correct_resp1', 2), ('correct_resp2', 'right'), ('target_ntarget', 0), ('imagegroup', 0), ('matcharrow', '{RIGHTARROW}')]), OrderedDict([('Trial', 37), ('condition', 'fractals'), ('mask', 0), ('stim_size', 0.15), ('load', 4), ('correct_resp1', 2), ('correct_resp2', 'right'), ('target_ntarget', 0), ('imagegroup', 0), ('matcharrow', '{RIGHTARROW}')]), OrderedDict([('Trial', 38), ('condition', 'fractals'), ('mask', 0), ('stim_size', 0.15), ('load', 4), ('correct_resp1', 2), ('correct_resp2', 'right'), ('target_ntarget', 0), ('imagegroup', 0), ('matcharrow', '{RIGHTARROW}')]), OrderedDict([('Trial', 39), ('condition', 'fractals'), ('mask', 0), ('stim_size', 0.15), ('load', 4), ('correct_resp1', 2), ('correct_resp2', 'right'), ('target_ntarget', 0), ('imagegroup', 0), ('matcharrow', '{RIGHTARROW}')]), OrderedDict([('Trial', 40), ('condition', 'fractals'), ('mask', 0), ('stim_size', 0.15), ('load', 4), ('correct_resp1', 2), ('correct_resp2', 'right'), ('target_ntarget', 0), ('imagegroup', 0), ('matcharrow', '{RIGHTARROW}')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="conditions_block/fractals_randomized.csv" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="features" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="Fixation"/>
    <Routine name="EncodeFeatures"/>
    <Routine name="Maintenance"/>
    <Routine name="ProbeFeatures"/>
    <Routine name="ISI"/>
    <LoopTerminator name="features"/>
    <Routine name="Question1"/>
    <Routine name="Question2"/>
    <Routine name="FB_Features"/>
  </Flow>
</PsychoPy2experiment>
